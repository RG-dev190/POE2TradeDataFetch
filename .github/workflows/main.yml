name: Fetch and Update POE2 Data

on:
  pull_request:
    types: [opened, synchronize]  # PR 생성 또는 업데이트 시 실행
  schedule:
    - cron: "0 15,3 * * *"  # KST 기준 자정(00:00)과 정오(12:00)에 실행
  workflow_dispatch:

jobs:
  fetch-and-update:
    runs-on: ubuntu-latest

    steps:
    # 1. 리포지토리 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Python 설치
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    # 3. 의존성 설치
    - name: Install dependencies
      run: pip install requests

    # 4. 데이터 가져오기 및 저장
    - name: Fetch and save POE data
      run: python fetch_and_save.py

    # 5. 변경 사항 확인
    - name: Check for changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        if git diff --quiet; then
          echo "No changes detected. Skipping commit and push."
          exit 0
        fi
        echo "Changes detected."

    # 6. 변경 사항 푸시 (변경된 경우에만 실행)
    - name: Commit and push changes
      if: success()  # 위 단계에서 변경이 감지된 경우에만 실행
      run: |
        git add data/*.json
        git commit -m "Update POE2 data $(date -u)"
        git push
